- name: "SCORED | 1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install cramfs(\\s|$)"
      line: "install cramfs /bin/true"
      create: yes
  when:
      - cis_control_1_1_1_1
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.1
      - cramfs

- name: "SCORED | 1.1.1.1 | PATCH | Remove cramfs module"
  modprobe:
    name: cramfs
    state: absent
  when:
      - cis_control_1_1_1_1
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.1
      - cramfs

- name: "SCORED | 1.1.1.2 | PATCH | Ensure mounting of freevxfs filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install freevxfs(\\s|$)"
      line: "install freevxfs /bin/true"
      create: yes
  when:
      - cis_control_1_1_1_2
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.2
      - freevxfs

- name: "SCORED | 1.1.1.2 | PATCH | Remove freevxfs module"
  modprobe:
    name: freevxfs
    state: absent
  when:
      - cis_control_1_1_1_2
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.2
      - freevxfs

- name: "SCORED | 1.1.1.3 | PATCH | Ensure mounting of jffs2 filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install jffs2(\\s|$)"
      line: "install jffs2 /bin/true"
      create: yes
  when:
      - cis_control_1_1_1_3
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.3
      - jffs2

- name: "SCORED | 1.1.1.3 | PATCH | Remove jffs2 module"
  modprobe:
    name: jffs2
    state: absent
  when:
      - cis_control_1_1_1_3
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.3
      - jffs2

- name: "SCORED | 1.1.1.4 | PATCH | Ensure mounting of hfs filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install hfs(\\s|$)"
      line: "install hfs /bin/true"
      create: yes
  when:
      - cis_control_1_1_1_4
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.4
      - hfs

- name: "SCORED | 1.1.1.4 | PATCH | Remove hfs module"
  modprobe:
    name: hfs
    state: absent
  when:
      - cis_control_1_1_1_4
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.4
      - hfs

- name: "SCORED | 1.1.1.5 | PATCH | Ensure mounting of hfsplus filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install hfsplus(\\s|$)"
      line: "install hfsplus /bin/true"
      create: yes
  when:
      - cis_control_1_1_1_5
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.5
      - hfsplus

- name: "SCORED | 1.1.1.5 | PATCH | Remove hfsplus module"
  modprobe:
    name: hfsplus
    state: absent
  when:
      - cis_control_1_1_1_5
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.5
      - hfsplus

- name: "SCORED | 1.1.1.6 | PATCH | Ensure mounting of squashfs filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install squashfs(\\s|$)"
      line: "install squashfs /bin/true"
      create: yes
  when:
      - cis_control_1_1_1_6
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.6
      - squashfs

- name: "SCORED | 1.1.1.6 | PATCH | Remove squashfs module"
  modprobe:
    name: squashfs
    state: absent
  when:
      - cis_control_1_1_1_6
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.6
      - squashfs

- name: "SCORED | 1.1.1.7 | PATCH | Ensure mounting of udf filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install udf(\\s|$)"
      line: "install udf /bin/true"
      create: yes
  when:
      - cis_control_1_1_1_7
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.7
      - udf

- name: "SCORED | 1.1.1.7 | PATCH | Remove udf module"
  modprobe:
    name: udf
    state: absent
  when:
      - cis_control_1_1_1_7
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.7
      - udf
- name: "SCORED | 1.1.3 | PATCH | Ensure nodev option set on /tmp partition\n
         SCORED | 1.1.4 | PATCH | Ensure nosuid option set on /tmp partition\n
         SCORED | 1.1.5 | PATCH | Ensure noexec option set on /tmp partition\n
         | drop custom tmp.mount"
  copy:
      src: etc/systemd/system/tmp.mount
      dest: /etc/systemd/system/tmp.mount
      owner: root
      group: root
      mode: 0644
  notify: systemd restart tmp.mount
  when:
      - cis_control_1_1_3
      - cis_control_1_1_4
      - cis_control_1_1_5
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.3
      - rule_1.1.4
      - rule_1.1.5

- name: "SCORED | 1.1.8  | PATCH | Ensure nodev option set on /var/tmp partition\n
         SCORED | 1.1.9  | PATCH | Ensure nosuid option set on /var/tmp partition\n
         SCORED | 1.1.10 | PATCH | Ensure noexec option set on /var/tmp partition"
  mount:
      name: /var/tmp
      src: "{{ cis_control_vartmp['source'] }}"
      state: present
      fstype: "{{ cis_control_vartmp['fstype'] }}"
      opts: "{{ cis_control_vartmp['opts'] }}"
  when:
      - cis_control_vartmp['enabled']
      - cis_control_1_1_8
      - cis_control_1_1_9
      - cis_control_1_1_10
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.8
      - rule_1.1.9
      - rule_1.1.10

- name: "SCORED | 1.1.14 | PATCH | Ensure nodev option set on /home partition"
  mount:
    name: "/home"
    src: "{{ item.device }}"
    state: mounted
    fstype: "{{ item.fstype }}"
    opts: "nodev"
  when:
      - cis_control_1_1_14
      - item.mount == "/home"
  with_items: "{{ ansible_mounts }}"
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.14

- name: "SCORED | 1.1.15 | PATCH | Ensure nodev option set on /dev/shm partition\n
         SCORED | 1.1.16 | PATCH | Ensure nosuid option set on /dev/shm partition\n
         SCORED | 1.1.17 | PATCH | Ensure noexec option set on /dev/shm partition"
  mount:
      name: /dev/shm
      src: tmpfs
      state: mounted
      fstype: tmpfs
      opts: "defaults,nodev,nosuid,noexec"
  when:
      - cis_control_1_1_15
      - cis_control_1_1_16
      - cis_control_1_1_17
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.15
      - rule_1.1.16
      - rule_1.1.17

- name: "NOTSCORED | 1.1.18 | PATCH | Ensure nodev option set on removable media partitions"
  debug:
      msg: "--> Not relevant"
  changed_when: no
  when:
      - cis_control_1_1_18
  tags:
      - level1
      - notscored
      - patch
      - rule_1.1.18

- name: "NOTSCORED | 1.1.19 | PATCH | Ensure nosuid option set on removable media partitions"
  debug:
      msg: "--> Not relevant"
  changed_when: no
  when:
      - cis_control_1_1_19
  tags:
      - level1
      - notscored
      - patch
      - rule_1.1.19

- name: "NOTSCORED | 1.1.20 | PATCH | Ensure noexec option set on removable media partitions"
  debug:
      msg: "--> Not relevant"
  changed_when: no
  when:
      - cis_control_1_1_20
  tags:
      - level1
      - notscored
      - patch
      - rule_1.1.20

- name: "SCORED | 1.1.21 | PATCH | Ensure sticky bit is set on all world-writable directories"
  shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d -perm -0002 2>/dev/null | xargs chmod a+t
  changed_when: no
  failed_when: no
  #when: sticky_bit_on_worldwritable_dirs_audit.rc == '0'
  when:
      - cis_control_1_1_21
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.21


- name: "NOTSCORED | 1.2.1 | PATCH | Ensure package manager repositories are configured"
  command: yum check-update
  register: yum_configured
  changed_when: no
  failed_when: no
  when:
      - cis_control_1_2_1
  tags:
      - level1
      - notscored
      - patch
      - rule_1.2.1
      - skip_ansible_lint

- name: "SCORED | 1.2.2 | PATCH | Ensure gpgcheck is globally activated"
  replace:
      name: /etc/yum.conf
      regexp: "^gpgcheck=0"
      replace: "gpgcheck=1"
  when:
      - cis_control_1_2_2
  tags:
      - level1
      - scored
      - patch
      - rule_1.2.2

- name: "SCORED | 1.2.2 | PATCH | Ensure gpgcheck is globally activated"
  find:
      paths: /etc/yum.repos.d
      patterns: "*.repo"
  register: yum_repos
  changed_when: no
  when:
      - cis_control_1_2_2
  tags:
      - level1
      - scored
      - patch
      - rule_1.2.2

- name: "SCORED | 1.2.2 | PATCH | Ensure gpgcheck is globally activated"
  replace:
      name: "{{ item.path }}"
      regexp: "^gpgcheck=0"
      replace: "gpgcheck=1"
  with_items:
      - "{{ yum_repos.files }}"
  when:
      - cis_control_1_2_2
  tags:
      - level1
      - scored
      - patch
      - rule_1.2.2

- name: "NOTSCORED | 1.2.3 | PATCH | Ensure GPG keys are configured"
  command: gpg --quiet --with-fingerprint /etc/pki/rpm-gpg/RPM-GPG-KEY-{{ ansible_distribution|lower }}-release
  when:
      - cis_control_1_2_3
      - ansible_distribution == "RedHat"
  tags:
      - level1
      - notscored
      - patch
      - rule_1.2.3

- name: "NOTSCORED | 1.2.4 | PATCH | Ensure Red Hat Network or Subscription Manager connection is configured"
  command: subscription-manager identity
  changed_when: no
  failed_when: no
  when:
      - ansible_distribution == "RedHat"
      - cis_control_1_2_4
  tags:
      - level1
      - notscored
      - patch
      - rule_1.2.4

- name: "SCORED | 1.3.1 | PATCH | Ensure AIDE is installed"
  yum:
      name: aide
      state: present
  when:
      - cis_control_1_3_1
  tags:
      - level1
      - scored
      - aide
      - patch
      - rule_1.3.1

- name: "SCORED | 1.3.1 | PATCH | Ensure AIDE is installed"
  command: /usr/sbin/aide --init -B 'database_out=file:/var/lib/aide/aide.db.gz'
  args:
      creates: /var/lib/aide/aide.db.gz
  changed_when: no
  failed_when: no
  async: 45
  poll: 0
  when:
      - cis_control_config_aide
      - cis_control_1_3_1
  tags:
      - level1
      - scored
      - aide
      - patch
      - rule_1.3.1

- name: "SCORED | 1.3.2 | PATCH | Ensure filesystem integrity is regularly checked"
  cron:
      name: Run AIDE integrity check
      cron_file: "{{ cis_control_aide_cron['cron_file'] }}"
      user: "{{ cis_control_aide_cron['cron_user'] }}"
      minute: "{{ cis_control_aide_cron['aide_minute'] | default('0') }}"
      hour: "{{ cis_control_aide_cron['aide_hour'] | default('5') }}"
      day: "{{ cis_control_aide_cron['aide_day'] | default('*') }}"
      month: "{{ cis_control_aide_cron['aide_month'] | default('*') }}"
      weekday: "{{ cis_control_aide_cron['aide_weekday'] | default('*') }}"
      job: "{{ cis_control_aide_cron['aide_job'] }}"
  when:
      - cis_control_1_3_2
  tags:
      - level1
      - scored
      - aide
      - file_integrity
      - patch
      - rule_1.3.2

- name: "SCORED | 1.4.1 | PATCH | Ensure permissions on bootloader config are configured"
  stat:
      path: /etc/grub2.cfg
  register: grub_cfg
  when:
      - cis_control_1_4_1
  tags:
      - level1
      - scored
      - grub
      - patch
      - rule_1.4.1

- name: "SCORED | 1.4.1 | PATCH | Ensure permissions on bootloader config are configured"
  file:
      path: "{{ grub_cfg.stat.lnk_source }}"
      owner: root
      group: root
      mode: 0600
  when:
      - grub_cfg.stat.exists and grub_cfg.stat.islnk
      - cis_control_1_4_1
  tags:
      - level1
      - scored
      - grub
      - patch
      - rule_1.4.1

- name: "SCORED | 1.4.2 | PATCH | Ensure bootloader password is set"
  grub_crypt:
      password: "{{ cis_control_bootloader_password }}"
  register: grub_pass
  when:
      - cis_control_set_boot_pass
      - cis_control_1_4_2
  tags:
      - level1
      - scored
      - grub
      - patch
      - rule_1.4.2

- name: "SCORED | 1.4.2 | PATCH | Ensure bootloader password is set"
  copy:
      dest: /boot/grub2/user.cfg
      content: "GRUB2_PASSWORD={{ grub_pass.passhash }}"
  notify: generate new grub config
  when:
      - cis_control_set_boot_pass and grub_pass is defined and grub_pass.passhash is defined and grub_pass.passhash != ''
      - cis_control_1_4_2
  tags:
      - level1
      - scored
      - grub
      - patch
      - rule_1.4.2

- name: "NOTSCORED | 1.4.3 | PATCH | Ensure authentication required for single user mode"
  block:
      - name: "NOTSCORED | 1.4.3 | PATCH | Ensure authentication required for single user mode - Emergency"
        lineinfile:
          dest: /usr/lib/systemd/system/emergency.service
          regexp: '/sbin/sulogin'
          line: 'ExecStart=-/bin/sh -c \"/usr/sbin/sulogin; /usr/bin/systemctl --fail --no-block default\"'
        when:
          - cis_control_1_4_3
          - ansible_distribution_major_version == 7
        tags:
          - level1
          - level2
          - patch
          - rule_1.4.3
      - name: "NOTSCORED | 1.4.3 | PATCH | Ensure authentication required for single user mode - Rescue"
        lineinfile:
          dest: /usr/lib/systemd/system/rescue.service
          regexp: '/sbin/sulogin'
          line: 'ExecStart=-/bin/sh -c \"/usr/sbin/sulogin; /usr/bin/systemctl --fail --no-block default\"'
        when:
          - cis_control_1_4_3
          - ansible_distribution_major_version == 7
        tags:
          - level1
          - level2
          - patch
          - rule_1.4.3

- name: "SCORED | 1.5.1 | PATCH | Ensure core dumps are restricted"
  lineinfile:
      state: present
      dest: /etc/security/limits.conf
      regexp: '^#?\\*.*core'
      line: '*                hard    core            0'
      insertbefore: '^# End of file'
  when:
      - cis_control_1_5_1
  tags:
      - level1
      - scored
      - limits
      - patch
      - rule_1.5.1

- name: "SCORED | 1.5.1 | PATCH | Ensure core dumps are restricted"
  sysctl:
      name: fs.suid_dumpable
      value: 0
      state: present
      reload: yes
      sysctl_set: yes
      ignoreerrors: yes
  when:
      - cis_control_1_5_1
  tags:
      - level1
      - scored
      - sysctl
      - patch
      - rule_1.5.1

- name: "NOTSCORED | 1.5.2 | PATCH | Ensure XD/NX support is enabled"
  shell: dmesg|grep -E "NX|XD" | grep " active"
  changed_when: no
  when:
      - cis_control_1_5_2
  tags:
      - level1
      - level2
      - patch
      - rule_1.5.2

- name: "SCORED | 1.5.3 | PATCH | Ensure address space layout randomization (ASLR) is enabled"
  sysctl:
      name: kernel.randomize_va_space
      value: 2
      state: present
      reload: yes
      sysctl_set: yes
      ignoreerrors: yes
  when:
      - cis_control_1_5_3
  tags:
      - level1
      - scored
      - patch
      - rule_1.5.3

- name: "SCORED | 1.5.4 | PATCH | Ensure prelink is disabled"
  command: prelink -ua
  when:
      - prelink_installed.rc == 0
      - cis_control_1_5_4
  tags:
      - level1
      - scored
      - patch
      - rule_1.5.4

- name: "SCORED | 1.5.4 | PATCH | Ensure prelink is disabled"
  yum:
    name: prelink
    state: absent
  when:
      - cis_control_1_5_4
  tags:
      - level1
      - scored
      - patch
      - rule_1.5.4

- name: "SCORED | 1.7.1.1 | PATCH | Ensure message of the day is configured properly"
  template:
      src: etc/motd.j2
      dest: /etc/motd
  when:
      - cis_control_1_7_1_1
  tags:
      - level1
      - banner
      - patch
      - rule_1.7.1.1

- name: "NOTSCORED | 1.7.1.2 | PATCH | Ensure local login warning banner is configured properly"
  template:
      src: etc/issue.j2
      dest: /etc/issue
  when:
      - cis_control_1_7_1_2
  tags:
      - level1
      - patch
      - rule_1.7.1.2

- name: "NOTSCORED | 1.7.1.3 | PATCH | Ensure remote login warning banner is configured properly"
  template:
      src: etc/issue.net.j2
      dest: /etc/issue.net
  when:
      - cis_control_1_7_1_3
  tags:
      - level1
      - banner
      - patch
      - rule_1.7.1.3

- name: "NOTSCORED | 1.7.1.4 | PATCH | Ensure permissions on /etc/motd are configured"
  file:
      dest: /etc/motd
      state: file
      owner: root
      group: root
      mode: 0644
  when:
      - cis_control_1_7_1_4
  tags:
      - level1
      - perms
      - patch
      - rule_1.7.1.4

- name: "SCORED | 1.7.1.5 | PATCH | Ensure permissions on /etc/issue are configured"
  file:
      dest: /etc/issue
      state: file
      owner: root
      group: root
      mode: 0644
  when:
      - cis_control_1_7_1_5
  tags:
      - level1
      - perms
      - patch
      - rule_1.7.1.5

- name: "NOTSCORED | 1.7.1.6 | PATCH | Ensure permissions on /etc/issue.net are configured"
  file:
      dest: /etc/issue.net
      state: file
      owner: root
      group: root
      mode: 0644
  when:
      - cis_control_1_7_1_6
  tags:
      - level1
      - perms
      - patch
      - rule_1.7.1.6

- name: "SCORED | 1.7.2 | PATCH | Ensure GDM login banner is configured"
  lineinfile:
      dest: "{{ item.file }}"
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      state: present
      create: yes
      owner: root
      group: root
      mode: 0644
  with_items:
      - { file: '/etc/dconf/profile/gdm', regexp:  'user-db', line: 'user-db:user' }
      - { file: '/etc/dconf/profile/gdm', regexp:  'system-db', line: 'system-db:gdm' }
      - { file: '/etc/dconf/profile/gdm', regexp:  'file-db', line: 'file-db:/usr/share/gdm/greeter-dconf-defaults' }
      - { file: '/etc/dconf/db/gdm.d/01-banner-message', regexp:  '\[org\/gnome\/login-screen\]', line: '[org/gnome/login-screen]' }
      - { file: '/etc/dconf/db/gdm.d/01-banner-message', regexp:  'banner-message-enable', line: 'banner-message-enable=true' }
      - { file: '/etc/dconf/db/gdm.d/01-banner-message', regexp:  'banner-message-text', line: "banner-message-text='{{ cis_control_warning_banner }}' " }
  when:
      - cis_control_gui
      - cis_control_1_7_2
  tags:
      - level1
      - level2
      - patch
      - rule_1.7.2

- name: "NOTSCORED | 1.8 | PATCH | Ensure updates, patches, and additional security software are installed"
  yum:
      name: "*"
      state: latest
  when:
      - cis_control_1_8
  tags:
      - level1
      - level2
      - patch
      - rule_1.8
      - skip_ansible_lint

- name: "SCORED | 2.1.1 | PATCH | Ensure chargen services are not enabled | chargen-dgram,chargen-stream"
  block:
      - name: "SCORED | 2.1.1 | PATCH | Ensure chargen services are not enabled | chargen-dgram"
        stat:
            path: /etc/xinetd.d/chargen-dgram
        register: chargen_dgram_service

      - name: "SCORED | 2.1.1 | PATCH | Ensure chargen services are not enabled | chargen-dgram"
        command: chkconfig chargen-dgram off
        notify: restart xinetd
        when: chargen_dgram_service.stat.exists
        tags:
          - skip_ansible_lint

      - name: "SCORED | 2.1.1 | PATCH | Ensure chargen services are not enabled | chargen-stream"
        stat:
            path: /etc/xinetd.d/chargen-stream
        register: chargen_stream_service

      - name: "SCORED | 2.1.1 | PATCH | Ensure chargen services are not enabled | chargen-stream"
        command: chkconfig chargen-stream off
        notify: restart xinetd
        when: chargen_stream_service.stat.exists
        tags:
            - skip_ansible_lint
  when:
      - cis_control_2_1_1
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.1

- name: "SCORED | 2.1.2 | PATCH | Ensure daytime services are not enabled | daytime-dgram,daytime-stream"
  block:
      - name: "SCORED | 2.1.2 | PATCH | Ensure daytime services are not enabled | daytime-dgram"
        stat:
            path: /etc/xinetd.d/daytime-dgram
        register: daytime_dgram_service

      - name: "SCORED | 2.1.2 | PATCH | Ensure daytime services are not enabled | daytime-dgram"
        command: chkconfig daytime-dgram off
        notify: restart xinetd
        when: daytime_dgram_service.stat.exists
        tags:
          - skip_ansible_lint

      - name: "SCORED | 2.1.2 | PATCH | Ensure daytime services are not enabled | daytime-stream"
        stat:
            path: /etc/xinetd.d/daytime-stream
        register: daytime_stream_service

      - name: "SCORED | 2.1.2 | PATCH | Ensure daytime services are not enabled | daytime-stream"
        command: chkconfig daytime-stream off
        notify: restart xinetd
        when: daytime_stream_service.stat.exists
        tags:
            - skip_ansible_lint
  when:
      - cis_control_2_1_2
  tags:
      - level1
      - scored
      - patch
      - rule_2.1.2

- name: "SCORED | 2.1.3 | PATCH | Ensure discard services are not enabled | discard-dgram,discard-stream"
  block:
      - name: "SCORED | 2.1.3 | PATCH | Ensure discard services are not enabled | discard-dgram"
        stat:
            path: /etc/xinetd.d/discard-dgram
        register: discard_dgram_service

      - name: "SCORED | 2.1.3 | PATCH | Ensure discard services are not enabled | discard-dgram"
        command: chkconfig discard-dgram off
        notify: restart xinetd
        when: discard_dgram_service.stat.exists
        tags:
            - skip_ansible_lint

      - name: "SCORED | 2.1.3 | PATCH | Ensure discard services are not enabled | discard-stream"
        stat:
            path: /etc/xinetd.d/discard-stream
        register: discard_stream_service

      - name: "SCORED | 2.1.3 | PATCH | Ensure discard services are not enabled | discard-stream"
        command: chkconfig discard-stream off
        notify: restart xinetd
        when: discard_stream_service.stat.exists
        tags:
            - skip_ansible_lint

  when:
      - cis_control_2_1_3
  tags:
      - level1
      - scored
      - patch
      - rule_2.1.3

- name: "SCORED | 2.1.4 | PATCH | Ensure echo services are not enabled | echo-dgram,echo-stream"
  block:
      - name: "SCORED | 2.1.4 | PATCH | Ensure echo services are not enabled | echo-dgram"
        stat:
            path: /etc/xinetd.d/echo-dgram
        register: echo_dgram_service

      - name: "SCORED | 2.1.4 | PATCH | Ensure echo services are not enabled | echo-dgram"
        command: chkconfig echo-dgram off
        notify: restart xinetd
        when: echo_dgram_service.stat.exists
        tags:
            - skip_ansible_lint

      - name: "SCORED | 2.1.4 | PATCH | Ensure echo services are not enabled | echo-stream"
        stat:
            path: /etc/xinetd.d/echo-stream
        register: echo_stream_service

      - name: "SCORED | 2.1.4 | PATCH | Ensure echo services are not enabled | echo-stream"
        command: chkconfig echo-stream off
        notify: restart xinetd
        when: echo_stream_service.stat.exists
        tags:
            - skip_ansible_lint

  when:
      - cis_control_2_1_4
  tags:
      - level1
      - scored
      - patch
      - rule_2.1.4

- name: "SCORED | 2.1.5 | PATCH | Ensure time services are not enabled | time-dgram,time-stream"
  block:
      - name: "SCORED | 2.1.5 | PATCH | Ensure time services are not enabled | time-dgram"
        stat:
            path: /etc/xinetd.d/time-dgram
        register: time_dgram_service

      - name: "SCORED | 2.1.5 | PATCH | Ensure time services are not enabled | time-dgram"
        command: chkconfig time-dgram off
        notify: restart xinetd
        when: time_dgram_service.stat.exists
        tags:
            - skip_ansible_lint

      - name: "SCORED | 2.1.5 | PATCH | Ensure time services are not enabled | time-stream"
        stat:
            path: /etc/xinetd.d/time-stream
        register: time_stream_service

      - name: "SCORED | 2.1.5 | PATCH | Ensure time services are not enabled | time-stream"
        command: chkconfig time-stream off
        notify: restart xinetd
        when: time_stream_service.stat.exists
        tags:
            - skip_ansible_lint

  when:
      - cis_control_2_1_5
  tags:
      - level1
      - scored
      - patch
      - rule_2.1.5

- name: "SCORED | 2.1.6 | PATCH | Ensure tftp server is not enabled"
  block:
      - name: "SCORED | 2.1.6 | PATCH | Ensure tftp server is not enabled"
        stat:
            path: /etc/xinetd.d/tftp
        register: tftp_service

      - name: "SCORED | 2.1.6 | PATCH | Ensure tftp server is not enabled"
        command: chkconfig tftp off
        notify: restart xinetd
        when: tftp_service.stat.exists and cis_control_tftp_server == false
        tags:
            - skip_ansible_lint

  when:
      - cis_control_2_1_6
  tags:
      - level1
      - scored
      - patch
      - rule_2.1.6

- name: "SCORED | 2.1.7 | PATCH | Ensure xinetd is not enabled"
  service:
      name: xinetd
      state: stopped
      enabled: no
  when:
      - xinetd_service_status.stdout == "loaded" and not cis_control_xinetd_required
      - cis_control_2_1_7
  tags:
      - level1
      - patch
      - scored
      - rule_2.1.7

- name: "NOTSCORED | 2.2.1.1 | PATCH | Ensure time synchronization is in use - service install"
  yum:
      name: "{{ cis_control_time_synchronization }}"
      state: present
  when:
      - cis_control_2_2_1_1
  tags:
      - level1
      - patch
      - rule_2.2.1.1

- name: "NOTSCORED | 2.2.1.1 | PATCH | Ensure time synchronization is in use - service start"
  service:
      name: "{{ cis_control_time_synchronization }}d"
      state: started
      enabled: yes
  when:
      - cis_control_2_2_1_1
  tags:
      - level1
      - patch
      - rule_2.2.1.1

- name: "NOTSCORED | 2.2.1.1 | PATCH | Ensure time synchronization is in use - service stop ntp"
  service:
      name: ntpd
      state: stopped
      enabled: no
  when:
      - cis_control_time_synchronization == "chrony" and ntpd_service_status.stdout == "loaded"
      - cis_control_2_2_1_1
  tags:
      - level1
      - patch
      - rule_2.2.1.1

- name: "NOTSCORED | 2.2.1.1 | PATCH | Ensure time synchronization is in use - service stop chrony"
  service:
      name: chronyd
      state: stopped
      enabled: no
  ignore_errors: yes
  when:
      - cis_control_time_synchronization == "ntp" and chronyd_service_status.stdout == "loaded"
      - cis_control_2_2_1_1
  tags:
      - level1
      - patch
      - rule_2.2.1.1

- name: "SCORED | 2.2.1.2 | PATCH | Ensure ntp is configured | modify /etc/ntp.conf"
  template:
      src: ntp.conf.j2
      dest: /etc/ntp.conf
      owner: root
      group: root
      mode: 0644
  when:
      - cis_control_time_synchronization == "ntp"
      - cis_control_2_2_1_2
  tags:
      - level1
      - patch
      - rule_2.2.1.2

- name: "SCORED | 2.2.1.2 | PATCH | Ensure ntp is configured | modify /etc/sysconfig/ntpd"
  lineinfile:
      dest: /etc/sysconfig/ntpd
      regexp: "^(#)?OPTIONS"
      line: "OPTIONS=\"-u ntp:ntp\""
  when:
      - cis_control_time_synchronization == "ntp"
      - cis_control_2_2_1_2
  tags:
      - level1
      - patch
      - rule_2.2.1.2

- name: "SCORED | 2.2.1.2 | PATCH | Ensure ntp is configured | modify /usr/lib/systemd/system/ntpd.service"
  lineinfile:
      dest: /usr/lib/systemd/system/ntpd.service
      regexp: "^(#)?ExecStart"
      line: "ExecStart=/usr/sbin/ntpd -u ntp:ntp $OPTIONS"
  when:
      - cis_control_time_synchronization == "ntp"
      - cis_control_2_2_1_2
  tags:
      - level1
      - patch
      - rule_2.2.1.2

- name: "SCORED | 2.2.1.3 | PATCH | Ensure chrony is configured"
  template:
      src: chrony.conf.j2
      dest: /etc/chrony.conf
      owner: root
      group: root
      mode: 0644
  when:
      - cis_control_time_synchronization == "chrony"
      - cis_control_2_2_1_3
  tags:
      - level1
      - patch
      - rule_2.2.1.3

- name: "SCORED | 2.2.1.3 | PATCH | Ensure chrony is configured | modify /etc/sysconfig/chronyd | 1"
  lineinfile:
      dest: /etc/sysconfig/chronyd
      regexp: "^(#)?OPTIONS"
      line: "OPTIONS=\"-u chrony\""
      state: present
      create: yes
  when:
      - cis_control_time_synchronization == "chrony"
      - cis_control_2_2_1_3
  tags:
      - level1
      - patch
      - rule_2.2.1.3

- name: "SCORED | 2.2.2 | PATCH | Ensure X Window System is not installed"
  yum:
      name: "{{item}}"
      state: absent
  with_items:
      - "@X Window System"
      - "xorg-x11*"
  when:
      - not cis_control_xwindows_required
      - cis_control_2_2_2
  tags:
      - level1
      - scored
      - xwindows
      - patch
      - rule_2.2.2

- name: "SCORED | 2.2.3 | PATCH | Ensure Avahi Server is not enabled"
  service:
      name: avahi-daemon
      state: stopped
      enabled: no
  when:
      - cis_control_avahi_server == false and avahi_service_status.stdout == "loaded"
      - cis_control_2_2_3
  tags:
      - level1
      - scored
      - avahi
      - services
      - patch
      - rule_2.2.3

- name: "SCORED | 2.2.4 | PATCH | Ensure CUPS is not enabled"
  service:
      name: cups
      state: stopped
      enabled: no
  when:
      - cis_control_cups_server == false and cups_service_status.stdout == "loaded"
      - cis_control_2_2_4
  tags:
      - level1
      - scored
      - cups
      - services
      - patch
      - rule_2.2.4

- name: "SCORED | 2.2.5 | PATCH | Ensure DHCP Server is not enabled"
  service:
      name: dhcpd
      state: stopped
      enabled: no
  when:
      - cis_control_dhcp_server == false and dhcpd_service_status.stdout == "loaded"
      - cis_control_2_2_5
  tags:
      - level1
      - scored
      - dhcp
      - services
      - patch
      - rule_2.2.5

- name: "SCORED | 2.2.6 | PATCH | Ensure LDAP server is not enabled"
  service:
      name: slapd
      state: stopped
      enabled: no
  when:
      - cis_control_ldap_server == false and slapd_service_status.stdout == "loaded"
      - cis_control_2_2_6
  tags:
      - level1
      - scored
      - ldap
      - services
      - patch
      - rule_2.2.6

- name: "SCORED | 2.2.7 | PATCH | Ensure NFS and RPC are not enabled"
  service:
      name: nfs
      state: stopped
      enabled: no
  when:
      - cis_control_nfs_rpc_server == false and nfs_service_status.stdout == "loaded"
      - cis_control_2_2_7
  tags:
      - level1
      - scored
      - nfs
      - rpc
      - services
      - patch
      - rule_2.2.7

- name: "SCORED | 2.2.7 | PATCH | Ensure RPC is not enabled"
  service:
      name: rpcbind
      state: stopped
      enabled: no
  when:
      - cis_control_nfs_rpc_server == false and rpcbind_service_status.stdout == "loaded"
      - cis_control_2_2_7
  tags:
      - level1
      - scored
      - nfs
      - rpc
      - services
      - patch
      - rule_2.2.7

- name: "SCORED | 2.2.8 | PATCH | Ensure DNS Server is not enabled"
  service:
      name: named
      state: stopped
      enabled: no
  when:
      - cis_control_named_server == false and named_service_status.stdout == "loaded"
      - cis_control_2_2_8
  tags:
      - level1
      - patch
      - rule_2.2.8

- name: "SCORED | 2.2.9 | PATCH | Ensure FTP Server is not enabled"
  service:
      name: vsftpd
      state: stopped
      enabled: no
  when:
      - cis_control_vsftpd_server == false and vsftpd_service_status.stdout == "loaded"
      - cis_control_2_2_9
  tags:
      - level1
      - patch
      - rule_2.2.9

- name: "SCORED | 2.2.10 | PATCH | Ensure HTTP server is not enabled"
  service:
      name: httpd
      state: stopped
      enabled: no
  when:
      - cis_control_httpd_server == false and httpd_service_status.stdout == "loaded"
      - cis_control_2_2_10
  tags:
      - level1
      - patch
      - rule_2.2.10

- name: "SCORED | 2.2.11 | PATCH | Ensure IMAP and POP3 server is not enabled"
  service:
      name: dovecot
      state: stopped
      enabled: no
  when:
      - cis_control_dovecot_server == false and dovecot_service_status.stdout == "loaded"
      - cis_control_2_2_11
  tags:
      - level1
      - patch
      - rule_2.2.11

- name: "SCORED | 2.2.12 | PATCH | Ensure Samba is not enabled"
  service:
      name: smb
      state: stopped
      enabled: no
  when:
      - cis_control_smb_server == false and smb_service_status.stdout == "loaded"
      - cis_control_2_2_12
  tags:
      - level1
      - patch
      - rule_2.2.12

- name: "SCORED | 2.2.13 | PATCH | Ensure HTTP Proxy Server is not enabled"
  service:
      name: squid
      state: stopped
      enabled: no
  when:
      - cis_control_squid_server == false and squid_service_status.stdout == "loaded"
      - cis_control_2_2_13
  tags:
      - level1
      - patch
      - rule_2.2.13

- name: "SCORED | 2.2.14 | PATCH | Ensure SNMP Server is not enabled"
  service:
      name: snmpd
      state: stopped
      enabled: no
  when:
      - cis_control_snmp_server == false and snmpd_service_status.stdout == "loaded"
      - cis_control_2_2_14
  tags:
      - level1
      - patch
      - rule_2.2.14

- name: "SCORED | 2.2.15 | PATCH | Ensure mail transfer agent is configured for local-only mode"
  lineinfile:
      dest: /etc/postfix/main.cf
      regexp: "^(#)?inet_interfaces"
      line: "inet_interfaces = localhost"
  when:
      - cis_control_is_mail_server == false and postfix_installed.rc == 0
      - cis_control_2_2_15
  tags:
      - level1
      - patch
      - rule_2.2.15

- name: "SCORED | 2.2.16 | PATCH | Ensure NIS Server is not enabled"
  service:
      name: ypserv
      state: stopped
      enabled: no
  when:
      - cis_control_nis_server == false and ypserv_service_status.stdout == "loaded"
      - cis_control_2_2_16
  tags:
      - level1
      - patch
      - rule_2.2.16

- name: "SCORED | 2.2.17 | PATCH | Ensure rsh server is not enabled | rsh"
  service:
      name: rsh.socket
      state: stopped
      enabled: no
  when:
      - cis_control_rsh_server == false and rsh_service_status.stdout == "loaded"
      - cis_control_2_2_17
  tags:
      - level1
      - patch
      - rule_2.2.17

- name: "SCORED | 2.2.17 | PATCH | Ensure rsh server is not enabled | rlogin"
  service:
      name: rlogin.socket
      state: stopped
      enabled: no
  when:
      - cis_control_rsh_server == false and rlogin_service_status.stdout == "loaded"
      - cis_control_2_2_17
  tags:
      - level1
      - patch
      - rule_2.2.17

- name: "SCORED | 2.2.17 | PATCH | Ensure rsh server is not enabled | rexec"
  service:
      name: rexec.socket
      state: stopped
      enabled: no
  when:
      - cis_control_rsh_server == false and rexec_service_status.stdout == "loaded"
      - cis_control_2_2_17
  tags:
      - level1
      - patch
      - rule_2.2.17

- name: "SCORED | 2.2.18 | PATCH | Ensure telnet server is not enabled"
  service:
      name: telnet
      state: stopped
      enabled: no
  when:
      - cis_control_telnet_server == false and telnet_service_status.stdout == "loaded"
      - cis_control_2_2_18
  tags:
      - level1
      - patch
      - rule_2.2.18

- name: "SCORED | 2.2.19 | PATCH | Ensure tftp server is not enabled"
  service:
      name: tftp
      state: stopped
      enabled: no
  when:
      - cis_control_tftp_server == false and tftp_service_status.stdout == "loaded"
      - cis_control_2_2_19
  tags:
      - level1
      - scored
      - insecure_services
      - tftp
      - patch
      - rule_2.2.19

- name: "SCORED | 2.2.20 | PATCH | Ensure rsync service is not enabled "
  service:
      name: rsyncd
      state: stopped
      enabled: no
  when:
      - cis_control_rsyncd_server == false and rsyncd_service_status.stdout == "loaded"
      - cis_control_2_2_20
  tags:
      - level1
      - patch
      - rule_2.2.20

- name: "SCORED | 2.2.21 | PATCH | Ensure talk server is not enabled"
  service:
      name: ntalk
      state: stopped
      enabled: no
  when:
      - cis_control_ntalk_server == false and ntalk_service_status.stdout == "loaded"
      - cis_control_2_2_21
  tags:
      - level1
      - patch
      - rule_2.2.21

- name: "SCORED | 2.3.1 | PATCH | Ensure NIS Client is not installed"
  yum:
      name: ypbind
      state: absent
  when:
      - cis_control_ypbind_required == false
      - cis_control_2_3_1
  tags:
      - level1
      - patch
      - rule_2.3.1

- name: "SCORED | 2.3.2 | PATCH | Ensure rsh client is not installed"
  yum:
      name: rsh
      state: absent
  when:
      - cis_control_rsh_required == false
      - cis_control_2_3_2
  tags:
      - level1
      - patch
      - rule_2.3.2

- name: "SCORED | 2.3.3 | PATCH | Ensure talk client is not installed"
  yum:
      name: talk
      state: absent
  when:
      - cis_control_talk_required == false
      - cis_control_2_3_3
  tags:
      - level1
      - patch
      - rule_2.3.3

- name: "SCORED | 2.3.4 | PATCH | Ensure telnet client is not installed"
  yum:
      name: telnet
      state: absent
  when:
      - cis_control_telnet_required == false
      - cis_control_2_3_4
  tags:
      - level1
      - patch
      - rule_2.3.4

- name: "SCORED | 2.3.5 | PATCH | Ensure LDAP client is not installed"
  yum:
      name: openldap-clients
      state: absent
  when:
      - cis_control_openldap_clients_required == false
      - cis_control_2_3_5
  tags:
      - level1
      - patch
      - rule_2.3.5
- name: "SCORED | 3.1.1 | PATCH | Ensure IP forwarding is disabled"
  sysctl:
      name: net.ipv4.ip_forward
      value: 0
      state: present
      reload: yes
      ignoreerrors: yes
  notify:
      - sysctl flush ipv4 route table
  when:
      - cis_control_is_router == false
      - cis_control_3_1_1
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.1.1

- name: "SCORED | 3.1.2 | PATCH | Ensure packet redirect sending is disabled"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.send_redirects, value: 0 }
      - { name: net.ipv4.conf.default.send_redirects, value: 0 }
  notify:
      - sysctl flush ipv4 route table
  when:
      - cis_control_is_router == false
      - cis_control_3_1_2
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.1.2

- name: "SCORED | 3.2.1 | PATCH | Ensure source routed packets are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.accept_source_route, value: 0 }
      - { name: net.ipv4.conf.default.accept_source_route, value: 0 }
  notify:
      - sysctl flush ipv4 route table
  when:
      - cis_control_3_2_1
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.1

- name: "SCORED | 3.2.2 | PATCH | Ensure ICMP redirects are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.accept_redirects, value: 0 }
      - { name: net.ipv4.conf.default.accept_redirects, value: 0 }
  notify:
      - sysctl flush ipv4 route table
  when:
      - cis_control_3_2_2
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.2

- name: "SCORED | 3.2.3 | PATCH | Ensure secure ICMP redirects are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.secure_redirects, value: 0 }
      - { name: net.ipv4.conf.default.secure_redirects, value: 0 }
  notify:
      - sysctl flush ipv4 route table
  when:
      - cis_control_3_2_3
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.3

- name: "SCORED | 3.2.4 | PATCH | Ensure suspicious packets are logged"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.log_martians, value: 1 }
      - { name: net.ipv4.conf.default.log_martians, value: 1 }
  notify:
      - sysctl flush ipv4 route table
  when:
      - cis_control_3_2_4
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.4

- name: "SCORED | 3.2.5 | PATCH | Ensure broadcast ICMP requests are ignored"
  sysctl:
      name: net.ipv4.icmp_echo_ignore_broadcasts
      value: 1
      state: present
      reload: yes
      ignoreerrors: yes
  notify:
      - sysctl flush ipv4 route table
  when:
      - cis_control_3_2_5
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.5

- name: "SCORED | 3.2.6 | PATCH | Ensure bogus ICMP responses are ignored"
  sysctl:
      name: net.ipv4.icmp_ignore_bogus_error_responses
      value: 1
      state: present
      reload: yes
      ignoreerrors: yes
  notify:
      - sysctl flush ipv4 route table
  when:
      - cis_control_3_2_6
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.6

- name: "SCORED | 3.2.7 | PATCH | Ensure Reverse Path Filtering is enabled"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.rp_filter, value: 1 }
      - { name: net.ipv4.conf.default.rp_filter, value: 1 }
  notify:
      - sysctl flush ipv4 route table
  when:
      - cis_control_3_2_7
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.7

- name: "SCORED | 3.2.8 | PATCH | Ensure TCP SYN Cookies is enabled"
  sysctl:
      name: net.ipv4.tcp_syncookies
      value: 1
      state: present
      reload: yes
      ignoreerrors: yes
  notify:
      - sysctl flush ipv4 route table
  when:
      - cis_control_3_2_8
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.8

- name: "SCORED | 3.3.1 | PATCH | Ensure IPv6 router advertisements are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv6.conf.all.accept_ra, value: 0 }
      - { name: net.ipv6.conf.default.accept_ra, value: 0 }
  notify:
      - sysctl flush ipv6 route table
  when:
      - cis_control_ipv6_required == true
      - cis_control_3_3_1
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.3.1

- name: "SCORED | 3.3.2 | PATCH | Ensure IPv6 redirects are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv6.conf.all.accept_redirects, value: 0 }
      - { name: net.ipv6.conf.default.accept_redirects, value: 0 }
  notify:
      - sysctl flush ipv6 route table
  when:
      - cis_control_ipv6_required == true
      - cis_control_3_3_2
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.3.2

- name: "NOTSCORED | 3.3.3 | PATCH | Ensure IPv6 is disabled"
  lineinfile:
    dest: /etc/default/grub
    regexp: '^(GRUB_CMDLINE_LINUX=.*(?!.*ipv6\.disable=1)\"[^\"]+)(\".*)'
    line: '\1 ipv6.disable=1\2'
    backrefs: yes
  notify:
    - grub2cfg
  when:
      - cis_control_ipv6_required == false
      - cis_control_3_3_3
  tags:
      - level1
      - patch
      - rule_3.3.3

- name: "SCORED | 3.4.1 | PATCH | Ensure TCP Wrappers is installed"
  yum:
    name: tcp_wrappers
    state: present
  when:
      - cis_control_3_4_1
  tags:
      - level1
      - patch
      - rule_3.4.1

- name: "SCORED | 3.4.2 | PATCH | Ensure /etc/hosts.allow is configured"
  template:
      src: hosts.allow.j2
      dest: /etc/hosts.allow
      owner: root
      group: root
      mode: 0644
  when:
      - cis_control_3_4_2
  tags:
      - level1
      - patch
      - rule_3.4.2

- name: "SCORED | 3.4.3 | PATCH | Ensure /etc/hosts.deny is configured"
  lineinfile:
      dest: /etc/hosts.deny
      regexp: "^(#)?ALL"
      line: "ALL: ALL"
  when:
      - cis_control_3_4_3
  tags:
      - level1
      - patch
      - rule_3.4.3

- name: "SCORED | 3.4.4 | PATCH | Ensure permissions on /etc/hosts.allow are configured"
  file:
      dest: /etc/hosts.allow
      owner: root
      group: root
      mode: 0644
  when:
      - cis_control_3_4_4
  tags:
      - level1
      - patch
      - rule_3.4.4

- name: "SCORED | 3.4.5 | PATCH | Ensure permissions on /etc/hosts.deny are 644"
  file:
      dest: /etc/hosts.deny
      owner: root
      group: root
      mode: 0644
  when:
      - cis_control_3_4_5
  tags:
      - level1
      - patch
      - rule_3.4.5

- name: "NOTSCORED | 3.5.1 | PATCH | Ensure DCCP is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install dccp(\\s|$)"
      line: "install dccp /bin/true"
      create: yes
  when:
      - cis_control_3_5_1
  tags:
      - level1
      - patch
      - rule_3.5.1

- name: "NOTSCORED | 3.5.2 | PATCH | Ensure SCTP is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install sctp(\\s|$)"
      line: "install sctp /bin/true"
      create: yes
  when:
      - cis_control_3_5_2
  tags:
      - level1
      - patch
      - rule_3.5.2

- name: "NOTSCORED | 3.5.3 | PATCH | Ensure RDS is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install rds(\\s|$)"
      line: "install rds /bin/true"
      create: yes
  when:
      - cis_control_3_5_3
  tags:
      - level1
      - patch
      - rule_3.5.3

- name: "NOTSCORED | 3.5.4 | PATCH | Ensure TIPC is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install tipc(\\s|$)"
      line: "install tipc /bin/true"
      create: yes
  when:
      - cis_control_3_5_4
  tags:
      - level1
      - patch
      - rule_3.5.4

- name: "SCORED | 3.6 | PATCH | Ensure firewalld is installed and started | CUSTOM"
  yum:
      name: firewalld
      state: present
  when: cis_control_firewall == "firewalld"
  tags:
      - level1
      - patch
      - rule_3.6

- name: "SCORED | 3.6 | PATCH | Ensure firewalld is installed and started | CUSTOM"
  service:
      name: firewalld
      state: started
      enabled: yes
  when: cis_control_firewall == "firewalld"
  tags:
      - level1
      - patch
      - rule_3.6

- name: "SCORED | 3.6.1 | PATCH | Ensure iptables is installed"
  yum:
      name: iptables
      state: present
  when:
      - cis_control_firewall == "iptables"
      - cis_control_3_6_1
  tags:
      - level1
      - patch
      - rule_3.6.1

- name: "SCORED | 3.6.5 | PATCH | Ensure firewall rules exist for all open ports"
  firewalld:
      service: "{{ item }}"
      state: enabled
      zone: drop
      permanent: true
      immediate: true
  notify: restart firewalld
  with_items: "{{ cis_control_firewall_services }}"
  when:
      - cis_control_firewall == "firewalld"
      - cis_control_3_6_5
  tags:
      - level1
      - patch
      - rule_3.6.5

- name: "SCORED | 4.2.3 | PATCH | Ensure rsyslog or syslog-ng is installed"
  yum:
      name: "{{ cis_control_syslog }}"
      state: present
  when:
      - cis_control_4_2_3
  tags:
      - level1
      - level2
      - patch
      - rule_4.2.3
#############################################
- name: "SCORED | 4.2.1.1 | PATCH | Ensure rsyslog Service is enabled"
  systemd:
    enabled: yes
    name: rsyslog 
  when:
      - cis_control_4_2_1_1
  tags:
      - level1
      - level2
      - patch
      - rule_4.2.1.1
#####################################################

- name: "SCORED | 4.2.1.3 | PATCH | Ensure rsyslog default file permissions configured"
  lineinfile:
      dest: /etc/rsyslog.conf
      regexp: '^\$FileCreateMode'
      line: '$FileCreateMode 0640'
  when:
      - cis_control_4_2_1_3
  tags:
      - level1
      - level2
      - patch
      - rule_4.2.1.3

#If the syslog-ng service is not activated the system may default to the syslogd service or lack logging instead
- name: "SCORED | 4.2.2.1 | PATCH | Ensure syslog-ng service is enabled"
  systemd:
    enabled: yes
    name: syslog-ng 
  when:
      - cis_control_4_2_2_1
  tags:
      - level1
      - level2
      - patch
      - rule_4.2.2.1  

- name: "SCORED | 4.2.4 | PATCH | Ensure permissions on all logfiles are configured"
  command: find /var/log -type f -exec chmod g-wx,o-rwx {} +
  changed_when: no
  failed_when: no
  when:
      - cis_control_4_2_4
  tags:
      - level1
      - level2
      - patch
      - rule_4.2.4

- name: "NOTSCORED | 4.3 | PATCH | Ensure logrotate is configured"
  find:
    paths: /etc/logrotate.d/
  register: log_rotates
  tags:
      - level1
      - level2
      - patch
      - rule_4.3

- name: "NOTSCORED | 4.3 | PATCH | Ensure logrotate is configured"
  replace:
    path: "{{ item.path }}"
    regexp: '^(\s*)(daily|weekly|monthly|yearly)$'
    replace: "\\1{{ cis_control_logrotate }}"
  with_items:
    - "{{ log_rotates.files }}"
    - { path: "/etc/logrotate.conf" }
  tags:
      - level1
      - level2
      - patch
      - rule_4.3

- name: "SCORED | 5.1.1 | PATCH | Ensure cron daemon is enabled"
  service:
      name: crond
      enabled: yes
  when:
      - cis_control_5_1_1
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.1

- name: "SCORED | 5.1.2 | PATCH | Ensure permissions on /etc/crontab are configured"
  file:
      dest: /etc/crontab
      owner: root
      group: root
      mode: 0600
  when:
      - cis_control_5_1_2
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.2

- name: "SCORED | 5.1.3 | PATCH | Ensure permissions on /etc/cron.hourly are configured"
  file:
      dest: /etc/cron.hourly
      state: directory
      owner: root
      group: root
      mode: 0700
  when:
      - cis_control_5_1_3
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.3

- name: "SCORED | 5.1.4 | PATCH | Ensure permissions on /etc/cron.daily are configured"
  file:
      dest: /etc/cron.daily
      state: directory
      owner: root
      group: root
      mode: 0700
  when:
      - cis_control_5_1_4
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.4

- name: "SCORED | 5.1.5 | PATCH | Ensure permissions on /etc/cron.weekly are configured"
  file:
      dest: /etc/cron.weekly
      state: directory
      owner: root
      group: root
      mode: 0700
  when:
      - cis_control_5_1_5
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.5

- name: "SCORED | 5.1.6 | PATCH | Ensure permissions on /etc/cron.monthly are configured"
  file:
      dest: /etc/cron.monthly
      state: directory
      owner: root
      group: root
      mode: 0700
  when:
      - cis_control_5_1_6
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.6

- name: "SCORED | 5.1.7 | PATCH | Ensure permissions on /etc/cron.d are configured"
  file:
      dest: /etc/cron.d
      state: directory
      owner: root
      group: root
      mode: 0700
  when:
      - cis_control_5_1_7
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.7

- name: "SCORED | 5.1.8 | PATCH | Ensure at/cron is restricted to authorized users"
  block:
      - name: "SCORED | 5.1.8 | PATCH | Ensure at/cron is restricted to authorized users"
        file:
            dest: /etc/at.deny
            state: absent

      - name: "SCORED | 5.1.8 | PATCH | Check if at.allow exists"
        stat:
            path: "/etc/at.allow"
        register: p

      - name: "SCORED | 5.1.8 | PATCH | Ensure at/cron is restricted to authorized users"
        file:
            dest: /etc/at.allow
            state: '{{ "file" if  p.stat.exists else "touch"}}'
            owner: root
            group: root
            mode: 0600

      - name: "SCORED | 5.1.8 | PATCH | Ensure at/cron is restricted to authorized users"
        file:
            dest: /etc/cron.deny
            state: absent

      - name: "SCORED | 5.1.8 | PATCH | Check if cron.allow exists"
        stat:
            path: "/etc/cron.allow"
        register: p

      - name: "SCORED | 5.1.8 | PATCH | Ensure at/cron is restricted to authorized users"
        file:
            dest: /etc/cron.allow
            state: '{{ "file" if  p.stat.exists else "touch"}}'
            owner: root
            group: root
            mode: 0600
  when:
      - cis_control_5_1_8
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.8

- name: "SCORED | 5.2.1 | PATCH | Ensure permissions on /etc/ssh/sshd_config are configured"
  file:
      dest: /etc/ssh/sshd_config
      state: file
      owner: root
      group: root
      mode: 0600
  when:
      - cis_control_5_2_1
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.1

- name: "SCORED | 5.2.2 | PATCH | Ensure SSH Protocol is set to 2"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^Protocol'
      line: 'Protocol 2'
  when:
      - cis_control_5_2_2
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.2

- name: "SCORED | 5.2.3 | PATCH | Ensure SSH LogLevel is set to INFO"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^LogLevel'
      line: 'LogLevel INFO'
  when:
      - cis_control_5_2_3
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.3

- name: "SCORED | 5.2.4 | PATCH | Ensure SSH X11 forwarding is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^X11Forwarding'
      line: 'X11Forwarding no'
  when:
      - cis_control_5_2_4
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.4

- name: "SCORED | 5.2.5 | PATCH | Ensure SSH MaxAuthTries is set to 4 or less"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^(#)?MaxAuthTries \d'
      line: 'MaxAuthTries 4'
  when:
      - cis_control_5_2_5
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.5

- name: "SCORED | 5.2.6 | PATCH | Ensure SSH IgnoreRhosts is enabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^IgnoreRhosts'
      line: 'IgnoreRhosts yes'
  when:
      - cis_control_5_2_6
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.6

- name: "SCORED | 5.2.7 | PATCH | Ensure SSH HostbasedAuthentication is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^HostbasedAuthentication'
      line: 'HostbasedAuthentication no'
  when:
      - cis_control_5_2_7
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.7

- name: "SCORED | 5.2.8 | PATCH | Ensure SSH root login is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^PermitRootLogin'
      line: 'PermitRootLogin no'
  when:
      - cis_control_5_2_8
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.8

- name: "SCORED | 5.2.9 | PATCH | Ensure SSH PermitEmptyPasswords is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^PermitEmptyPasswords'
      line: 'PermitEmptyPasswords no'
  when:
      - cis_control_5_2_9
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.9

- name: "SCORED | 5.2.10 | PATCH | Ensure SSH PermitUserEnvironment is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^PermitUserEnvironment'
      line: 'PermitUserEnvironment no'
  when:
      - cis_control_5_2_10
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.10

- name: "SCORED | 5.2.11 | PATCH | Ensure only approved ciphers are used"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^Ciphers'
      line: "Ciphers {{ cis_control_sshd['ciphers'] }}"
  when:
      - cis_control_5_2_11
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.11

- name: "SCORED | 5.2.12 | PATCH | Ensure only approved MAC algorithms are used"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^MACs'
      line: "MACs {{ cis_control_sshd['macs'] }}"
  when:
      - cis_control_5_2_12
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.12

- name: "SCORED | 5.2.13 | PATCH | Ensure SSH Idle Timeout Interval is configured"
  block:
      - name: "SCORED | 5.2.13 | PATCH | Ensure SSH Idle Timeout Interval is configured"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: '^ClientAliveInterval'
            line: "ClientAliveInterval {{ cis_control_sshd['clientaliveinterval'] }}"

      - name: "SCORED | 5.2.13 | PATCH | Ensure SSH ClientAliveCountMax set to <= 3"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: '^ClientAliveCountMax'
            line: "ClientAliveCountMax {{ cis_control_sshd['clientalivecountmax'] }}"
  when:
      - cis_control_5_2_13
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.13

- name: "SCORED | 5.2.14 | PATCH | Ensure SSH LoginGraceTime is set to one minute or less"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^LoginGraceTime'
      line: "LoginGraceTime {{ cis_control_sshd['logingracetime'] }}"
  when:
      - cis_control_5_2_14
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.14

- name: "SCORED | 5.2.15 | PATCH | Ensure SSH access is limited"
  block:
      - name: "SCORED | 5.2.15 | PATCH | Ensure SSH access is limited - allowusers"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: "^AllowUsers"
            line: AllowUsers {{ cis_control_sshd['allowusers'] }}
        notify:
            - restart sshd
        when:
            - "cis_control_sshd['allowusers']|default('') != ''"

      - name: "SCORED | 5.2.15 | PATCH | Ensure SSH access is limited - allowgroups"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: "^AllowGroups"
            line: AllowGroups {{ cis_control_sshd['allowgroups'] }}
        notify:
            - restart sshd
        when:
            - "cis_control_sshd['allowgroups']|default('') != ''"

      - name: "SCORED | 5.2.15 | PATCH | Ensure SSH access is limited - denyusers"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: "^DenyUsers"
            line: DenyUsers {{ cis_control_sshd['denyusers'] }}
        notify:
            - restart sshd
        when:
            - "cis_control_sshd['denyusers']|default('') != ''"

      - name: "SCORED | 5.2.15 | PATCH | Ensure SSH access is limited - denygroups"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: "^DenyGroups"
            line: DenyGroups {{ cis_control_sshd['denygroups'] }}
        notify:
            - restart sshd
        when:
            - "cis_control_sshd['denygroups']|default('') != ''"
  when:
      - cis_control_5_2_15
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.15

- name: "SCORED | 5.2.16 | PATCH | Ensure SSH warning banner is configured"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^Banner'
      line: 'Banner /etc/issue.net'
  when:
      - cis_control_5_2_16
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.16

- name: "SCORED | 5.3.1 | PATCH | Ensure password creation requirements are configured"
  lineinfile:
      state: present
      dest: /etc/security/pwquality.conf
      regexp: '^{{ item.key }}'
      line: '{{ item.key }} = {{ item.value }}'
  with_items:
      - { key: 'minlen',  value: '14' }
      - { key: 'dcredit', value: '-1' }
      - { key: 'ucredit', value: '-1' }
      - { key: 'ocredit', value: '-1' }
      - { key: 'lcredit', value: '-1' }
  when:
      - cis_control_5_3_1
  tags:
      - level1
      - level2
      - patch
      - rule_5.3.1

- name: "SCORED | 5.3.2 | PATCH | Ensure lockout for failed password attempts is configured"
  command: /bin/true
  changed_when: no
  when:
      - cis_control_5_3_2
  tags:
      - level1
      - level2
      - patch
      - rule_5.3.2
      - notimplemented

- name: "SCORED | 5.3.3 | PATCH | Ensure password reuse is limited"
  command: /bin/true
  changed_when: no
  when:
      - cis_control_5_3_3
  tags:
      - level1
      - level2
      - patch
      - rule_5.3.3
      - notimplemented

- name: "SCORED | 5.3.4 | PATCH | Ensure password hashing algorithm is SHA-512"
  command: authconfig --passalgo=sha512 --update
  changed_when: no
  failed_when: no
  when:
      - cis_control_5_3_4
  tags:
      - level1
      - level2
      - patch
      - rule_5.3.4

- name: "SCORED | 5.4.1.1 | PATCH | Ensure password expiration is 90 days or less"
  lineinfile:
      state: present
      dest: /etc/login.defs
      regexp: '^PASS_MAX_DAYS'
      line: "PASS_MAX_DAYS {{ cis_control_pass['max_days'] }}"
  when:
      - cis_control_5_4_1_1
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.1.1

- name: "SCORED | 5.4.1.2 | PATCH | Ensure minimum days between password changes is 7 or more"
  lineinfile:
      state: present
      dest: /etc/login.defs
      regexp: '^PASS_MIN_DAYS'
      line: "PASS_MIN_DAYS {{ cis_control_pass['min_days'] }}"
  when:
      - cis_control_5_4_1_2
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.1.2

- name: "SCORED | 5.4.1.3 | PATCH | Ensure password expiration warning days is 7 or more"
  lineinfile:
      state: present
      dest: /etc/login.defs
      regexp: '^PASS_WARN_AGE'
      line: "PASS_WARN_AGE {{ cis_control_pass['warn_age'] }}"
  when:
      - cis_control_5_4_1_3
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.1.3

#Verify all users with a password have Password inactive no more than 30 days after password expires
#The usersers has to verifyide by the system Administrator
#SCORED | 5.4.1.4 | PATCH | Ensure inactive password lock is 30 days or less"

- name: "SCORED | 5.4.2 | PATCH | Ensure system accounts are non-login"
  shell: "awk -F: '($3 < {{ cis_control_5_4_2_min_uid }}) {print $1 }' /etc/passwd"
  changed_when: no
  register: system_account
  when:
      - cis_control_5_4_2
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.2

- name: "SCORED | 5.4.2 | PATCH | Ensure system accounts are non-login"
  user:
    name: "{{ item }}"
    password_lock: true
  with_items:
    - "{{ system_account.stdout_lines }}"
  when:
      - cis_control_5_4_2
      - item != "root"
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.2

- name: "SCORED | 5.4.2 | PATCH | Ensure system accounts are non-login"
  user:
    name: "{{ item }}"
    shell: /sbin/nologin
  with_items:
    - "{{ system_account.stdout_lines }}"
  when:
      - cis_control_5_4_2
      - item != "root"
      - item != "sync"
      - item != "shutdown"
      - item != "halt"
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.2

- name: "SCORED | 5.4.3 | PATCH | Ensure default group for the root account is GID 0"
  command: usermod -g 0 root
  changed_when: no
  failed_when: no
  when:
      - cis_control_5_4_3
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.3

- name: "SCORED | 5.4.4 | PATCH | Ensure default user umask is 027 or more restrictive"
  block:
      - name: "SCORED | 5.4.4 | PATCH | Ensure default user umask is 027 or more restrictive - /etc/bashrc"
        replace:
            path: /etc/bashrc
            regexp: '(^\s+umask) 002'
            replace: '\1 027'

      - name: "SCORED | 5.4.4 | PATCH | Ensure default user umask is 027 or more restrictive - /etc/profile"
        replace:
            path: /etc/profile
            regexp: '(^\s+umask) 002'
            replace: '\1 027'
  when:
      - cis_control_5_4_4
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.4

#- name: "NOTSCORED | 5.5 | PATCH | Ensure root login is restricted to system console"
#Run the command cat /etc/securetty and verify the control

- name: "SCORED | 5.6 | PATCH | Ensure access to the su command is restricted"
  lineinfile:
      state: present
      dest: /etc/pam.d/su
      regexp: '^(#)?auth\s+required\s+pam_wheel\.so'
      line: 'auth           required        pam_wheel.so use_uid'
  tags:
      - level1
      - level2
      - patch
      - rule_5.6

- name: "SCORED | 5.6 | PATCH | Ensure access to the su command is restricted - wheel group contains root"
  user:
      name: root
      groups: wheel
  tags:
      - level1
      - level2
      - patch
      - rule_5.6

- name: "SCORED | 6.1.2 | PATCH | Ensure permissions on /etc/passwd are configured"
  file:
      dest: /etc/passwd
      owner: root
      group: root
      mode: 0644
  when:
      - cis_control_6_1_2
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.2

- name: "SCORED | 6.1.3 | PATCH | Ensure permissions on /etc/shadow are configured"
  file:
      dest: /etc/shadow
      owner: root
      group: root
      mode: 0000
  when:
      - cis_control_6_1_3
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.3

- name: "SCORED | 6.1.4 | PATCH | Ensure permissions on /etc/group are configured"
  file:
      dest: /etc/group
      owner: root
      group: root
      mode: 0644
  when:
      - cis_control_6_1_4
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.4

- name: "SCORED | 6.1.5 | PATCH | Ensure permissions on /etc/gshadow are configured"
  file:
      dest: /etc/gshadow
      owner: root
      group: root
      mode: 0000
  when:
      - cis_control_6_1_5
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.5

- name: "SCORED | 6.1.6 | PATCH | Ensure permissions on /etc/passwd- are configured"
  file:
      dest: /etc/passwd-
      owner: root
      group: root
      mode: 0600
  when:
      - cis_control_6_1_6
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.6

- name: "SCORED | 6.1.7 | PATCH | Ensure permissions on /etc/shadow- are configured"
  file:
      dest: /etc/shadow-
      owner: root
      group: root
      mode: 0000
  when:
      - cis_control_6_1_7
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.7

- name: "SCORED | 6.1.8 | PATCH | Ensure permissions on /etc/group- are configured"
  file:
      dest: /etc/group-
      owner: root
      group: root
      mode: 0600
  when:
      - cis_control_6_1_8
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.8

- name: "SCORED | 6.1.9 | PATCH | Ensure permissions on /etc/gshadow- are configured"
  file:
      dest: /etc/gshadow-
      owner: root
      group: root
      mode: 0600
  when:
      - cis_control_6_1_9
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.9

- name: "SCORED | 6.2.1 | PATCH | Ensure password fields are not empty"
  command: passwd -l {{ item }}
  changed_when: no
  failed_when: no
  with_items: "{{ empty_password_accounts.stdout_lines }}"
  when:
      - empty_password_accounts.rc
      - cis_control_6_2_1
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.1

- name: "SCORED | 6.2.2 | PATCH | Ensure no legacy '+' entries exist in /etc/passwd"
  command: sed -i '/^+/ d' /etc/passwd
  changed_when: no
  failed_when: no
  when:
      - cis_control_6_2_2
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.2
      - skip_ansible_lint #  ANSIBLE0006

- name: "SCORED | 6.2.3 | PATCH | Ensure no legacy '+' entries exist in /etc/shadow"
  command: sed -i '/^+/ d' /etc/shadow
  changed_when: no
  failed_when: no
  when:
      - cis_control_6_2_3
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.3
      - skip_ansible_lint #  ANSIBLE0006

- name: "SCORED | 6.2.4 | PATCH | Ensure no legacy '+' entries exist in /etc/group"
  command: sed -i '/^+/ d' /etc/group
  changed_when: no
  failed_when: no
  when:
      - cis_control_6_2_4
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.4
      - skip_ansible_lint #  ANSIBLE0006

- name: "SCORED | 6.2.5 | PATCH | Ensure root is the only UID 0 account"
  command: passwd -l {{ item }}
  changed_when: no
  failed_when: no
  with_items: "{{ uid_zero_accounts_except_root.stdout_lines }}"
  when:
      - uid_zero_accounts_except_root.rc
      - cis_control_6_2_5
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.5


- name: "SCORED | 6.2.11 | PATCH | Ensure no users have .forward files"
  file:
      state: absent
      dest: "~{{ item }}/.forward"
  with_items: "{{ users.stdout_lines }}"
  when:
      - cis_control_6_2_11
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.11

- name: "SCORED | 6.2.12 | PATCH | Ensure no users have .netrc files"
  file:
      state: absent
      dest: "~{{ item }}/.netrc"
  with_items: "{{ users.stdout_lines }}"
  when:
      - cis_control_6_2_12
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.12

- name: "SCORED | 6.2.14 | PATCH | Ensure no users have .rhosts files"
  file:
      state: absent
      dest: "~{{ item }}/.rhosts"
  with_items: "{{ users.stdout_lines }}"
  when:
      - cis_control_6_2_14
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.14
